<?php$plugin = array(  'form' => 'TermParser_form',  'callback' => 'TermParser_callback',  'name' => 'Term parser',  'category' => 'Custom',);/** * Plugin settings form */function TermParser_form($importer, $element_key, $settings) {  $form = array();  $form['operation'] = array(    '#type' => 'select',    '#title' => t('Chanchge'),    '#options' => array(      0 => t('Add term to new field'),      1 => t('Delete term of current field'),    ),    '#description' => t('Set type operation for your a field'),  );  $form['term'] = array(    '#type' => 'textfield',    '#title' => t('The term for search our XML structure'),    '#default_value' => isset($settings['term']) ? $settings['term'] :'',    '#description' => t('Enter the search value'),  );  return $form;}function TermParser_callback($result, $item_key, $element_key, &$field, $settings) {  if (!empty($field) && !empty($settings)) {    switch($settings['operation']) {      case '0':        $pos = strpos($field, $settings['term']);        if ($pos === false) {          $field = "";          break;        }        $field = substr($field, $pos + strlen($settings['term']), -1);        $pos = strpos($field, "\n");        $field = substr($field, 0, $pos);      break;      case '1':        $pos = strpos($field, $settings['term']);        if ($pos === false) {          break;        }        $result = substr($field, 0, $pos);        $field = substr($field, $pos + strlen($settings['term']), -1);        $pos = strpos($field, "\n");        $result .= substr($field, $pos, -1);        $field = $result;            break;    }  }}